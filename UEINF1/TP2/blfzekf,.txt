        // // Initialise les fonctions de communication avec le serveur
        // DataInputStream inStream = new DataInputStream(socket.getInputStream());
        // DataOutputStream outStream = new DataOutputStream(socket.getOutputStream());
        // String clientMessage = "";

        // int index = 0;
        // while (!dresseur.getEquipe().isEmpty()) {
        // Pokemon selfPokemon = (Pokemon) dresseur.getEquipe().get(index);
        // int selfHp = selfPokemon.getPv();
        // int result = 0;

        // // Envoie les informations de son Pokémon à l'adversaire
        // outStream.writeUTF(String.valueOf(selfHp));
        // outStream.flush();

        // // Gestion des types de Pokémon
        // String type = selfPokemon.getType();
        // String type1, type2;
        // if (type.contains("/")) {
        // String[] types = type.split("/");
        // type1 = types[0];
        // type2 = types[1];
        // } else {
        // type1 = type;
        // type2 = "none";
        // }

        // outStream.writeUTF(type1);
        // outStream.flush();
        // outStream.writeUTF(type2);
        // outStream.flush();

        // outStream.writeUTF(selfPokemon.getNom());

        // // Recoit les informations du Pokémon adverse
        // int opponentHp = Integer.parseInt(inStream.readUTF());
        // String opponentType1 = inStream.readUTF();
        // String opponentType2 = inStream.readUTF();
        // String opponentPokemon = inStream.readUTF();

        // System.out.println("Adversaire trouvé: le combat va bientôt commencer");
        // System.out.println("Vous êtes le 2ème joueur");
        // System.out.println("Vous envoyez " + selfPokemon.getNom() + " au combat");
        // System.out.println("L'adversaire envoie un " + opponentPokemon + " au
        // combat");
        // System.out.println("PV de votre Pokémon: " + selfHp + "; PV du Pokémon
        // adverse: " + opponentHp);

        // // L'ordre est inversé en fonction du premier ou du deuxième joueur
        // // Après l'attaque de l'adversaire, si le Pokémon est KO, le combat s'arrête
        // while (selfHp >= 0 && opponentHp >= 0) {
        // // Se fait attaquer
        // result = Integer.parseInt(inStream.readUTF());
        // selfHp -= result;
        // selfHp = Math.max(selfHp, 0); // Pour éviter d'avoir des PV négatifs
        // System.out.println("Le Pokémon adverse a attaqué, votre Pokémon a subi " +
        // result + " dégâts");
        // System.out.println("PV restant de votre Pokémon: " + selfHp);

        // // Après la vérification de KO du Pokémon actuel
        // if (selfHp <= 0) {
        // System.out.println("Votre Pokémon est KO!");
        // index++;
        // if (index < dresseur.getEquipe().size()) {
        // selfPokemon = (Pokemon) dresseur.getEquipe().get(index);
        // selfHp = selfPokemon.getPv();
        // System.out.println("Envoi du prochain Pokémon : " + selfPokemon.getNom());

        // // Envoi des PV, du nom et des types du nouveau Pokémon
        // outStream.writeUTF(String.valueOf(selfHp));
        // outStream.flush();
        // outStream.writeUTF(selfPokemon.getNom());
        // outStream.flush();
        // String[] newTypes = selfPokemon.getType().split("/");
        // outStream.writeUTF(newTypes[0]);
        // outStream.flush();
        // outStream.writeUTF(newTypes.length > 1 ? newTypes[1] : "none");
        // outStream.flush();
        // }
        // continue;
        // }

        // if (inStream.available() > 0) {
        // opponentHp = Integer.parseInt(inStream.readUTF());
        // opponentPokemon = inStream.readUTF();
        // opponentType1 = inStream.readUTF();
        // opponentType2 = inStream.readUTF();
        // }

        // if (opponentHp <= 0) {
        // break;
        // }

        // // Attaque le Pokémon adverse
        // result = GestionTypeCombat.attackOnline(selfPokemon, opponentType1,
        // opponentType2, selfPokemon.getNom(),
        // opponentPokemon);
        // opponentHp -= result;
        // opponentHp = Math.max(opponentHp, 0); // Pour éviter d'avoir des PV négatifs
        // System.out.println("Vous venez d'infliger " + result + " au Pokémon
        // adverse");
        // System.out.println("PV restant du Pokémon adverse: " + opponentHp);
        // clientMessage = String.valueOf(result);
        // outStream.writeUTF(clientMessage);
        // outStream.flush();
        // }

        // if (opponentHp <= 0) {
        // System.out.println("Félicitation, vous avez gagné!");
        // continue;
        // } else if (selfHp <= 0) {
        // System.out.println("Votre Pokémon est KO!");
        // continue;
        // } else {
        // System.out.println("Erreur !!");
        // }
        // }